/*******************************************************************************
 *   Copyright 2014 Analog Devices, Inc.
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 ********************************************************************************/

// TODO: this was copied from chimple, is there a way to share this?

// Jenkins-specific init script
//   This will be invoked by Jenkins builds using the -I command line option.

ext {
	jenkinsHome = new File(System.getenv('JENKINS_HOME'))
	jenkinsJobs = new File(jenkinsHome, 'jobs')
	lastDimpleBuild = new File(jenkinsJobs, 'dimple/lastSuccessful')

	def dimpleKits = fileTree(lastDimpleBuild).matching {
		include '**/archive/**/dimple_v*.zip'
	}.getFiles().asList()
	dimpleKits.sort()

	dimpleKit = dimpleKits[-1] // Last entry
	
	jenkinsDir = file('jenkins')
	dimpleDir = new File(jenkinsDir, 'dimple')
}

rootProject {
	task unzipDimpleKit(type: Copy) {
		from zipTree(dimpleKit)
		into dimpleDir
	}


	unzipDimpleKit.execute()

	task jenkinsClean(type: Delete) {
		delete jenkinsDir
	}
}

allprojects {
	if (it.getPath() == ':java') {
		it.ext.jenkins = true
		repositories {
			flatDir dirs: ["${dimpleDir}/solvers/lib"]
		}
	}
}
